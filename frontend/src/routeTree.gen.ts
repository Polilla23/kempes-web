/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MyaccountIndexRouteImport } from './routes/myaccount/index'
import { Route as PlayerFindAllRouteImport } from './routes/player/findAll'
import { Route as PlayerCreateRouteImport } from './routes/player/create'
import { Route as ClubFindAllRouteImport } from './routes/club/findAll'
import { Route as ClubCreateRouteImport } from './routes/club/create'
import { Route as AuthResendVerificationEmailRouteImport } from './routes/_auth/resend-verification-email'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as AuthFindAllRouteImport } from './routes/_auth/findAll'
import { Route as ManagementUsersIndexRouteImport } from './routes/management/users/index'
import { Route as ManagementPlayersIndexRouteImport } from './routes/management/players/index'
import { Route as ManagementClubsIndexRouteImport } from './routes/management/clubs/index'
import { Route as PlayerUpdateIdRouteImport } from './routes/player/update.$id'
import { Route as PlayerFindIdRouteImport } from './routes/player/find.$id'
import { Route as PlayerDeleteIdRouteImport } from './routes/player/delete.$id'
import { Route as ClubUpdateIdRouteImport } from './routes/club/update.$id'
import { Route as ClubFindOneIdRouteImport } from './routes/club/findOne.$id'
import { Route as ClubDeleteIdRouteImport } from './routes/club/delete.$id'
import { Route as AuthVerifyEmailTokenRouteImport } from './routes/_auth/verify-email.$token'
import { Route as AuthUpdateIdRouteImport } from './routes/_auth/update.$id'
import { Route as AuthResetPasswordTokenRouteImport } from './routes/_auth/reset-password.$token'
import { Route as AuthRegisterTokenRouteImport } from './routes/_auth/register.$token'
import { Route as AuthDeleteIdRouteImport } from './routes/_auth/delete.$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MyaccountIndexRoute = MyaccountIndexRouteImport.update({
  id: '/myaccount/',
  path: '/myaccount/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayerFindAllRoute = PlayerFindAllRouteImport.update({
  id: '/player/findAll',
  path: '/player/findAll',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayerCreateRoute = PlayerCreateRouteImport.update({
  id: '/player/create',
  path: '/player/create',
  getParentRoute: () => rootRouteImport,
} as any)
const ClubFindAllRoute = ClubFindAllRouteImport.update({
  id: '/club/findAll',
  path: '/club/findAll',
  getParentRoute: () => rootRouteImport,
} as any)
const ClubCreateRoute = ClubCreateRouteImport.update({
  id: '/club/create',
  path: '/club/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResendVerificationEmailRoute =
  AuthResendVerificationEmailRouteImport.update({
    id: '/_auth/resend-verification-email',
    path: '/resend-verification-email',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/_auth/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthFindAllRoute = AuthFindAllRouteImport.update({
  id: '/_auth/findAll',
  path: '/findAll',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagementUsersIndexRoute = ManagementUsersIndexRouteImport.update({
  id: '/management/users/',
  path: '/management/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagementPlayersIndexRoute = ManagementPlayersIndexRouteImport.update({
  id: '/management/players/',
  path: '/management/players/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagementClubsIndexRoute = ManagementClubsIndexRouteImport.update({
  id: '/management/clubs/',
  path: '/management/clubs/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayerUpdateIdRoute = PlayerUpdateIdRouteImport.update({
  id: '/player/update/$id',
  path: '/player/update/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayerFindIdRoute = PlayerFindIdRouteImport.update({
  id: '/player/find/$id',
  path: '/player/find/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayerDeleteIdRoute = PlayerDeleteIdRouteImport.update({
  id: '/player/delete/$id',
  path: '/player/delete/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ClubUpdateIdRoute = ClubUpdateIdRouteImport.update({
  id: '/club/update/$id',
  path: '/club/update/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ClubFindOneIdRoute = ClubFindOneIdRouteImport.update({
  id: '/club/findOne/$id',
  path: '/club/findOne/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ClubDeleteIdRoute = ClubDeleteIdRouteImport.update({
  id: '/club/delete/$id',
  path: '/club/delete/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyEmailTokenRoute = AuthVerifyEmailTokenRouteImport.update({
  id: '/_auth/verify-email/$token',
  path: '/verify-email/$token',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthUpdateIdRoute = AuthUpdateIdRouteImport.update({
  id: '/_auth/update/$id',
  path: '/update/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordTokenRoute = AuthResetPasswordTokenRouteImport.update({
  id: '/_auth/reset-password/$token',
  path: '/reset-password/$token',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterTokenRoute = AuthRegisterTokenRouteImport.update({
  id: '/_auth/register/$token',
  path: '/register/$token',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDeleteIdRoute = AuthDeleteIdRouteImport.update({
  id: '/_auth/delete/$id',
  path: '/delete/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/findAll': typeof AuthFindAllRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/resend-verification-email': typeof AuthResendVerificationEmailRoute
  '/club/create': typeof ClubCreateRoute
  '/club/findAll': typeof ClubFindAllRoute
  '/player/create': typeof PlayerCreateRoute
  '/player/findAll': typeof PlayerFindAllRoute
  '/myaccount': typeof MyaccountIndexRoute
  '/delete/$id': typeof AuthDeleteIdRoute
  '/register/$token': typeof AuthRegisterTokenRoute
  '/reset-password/$token': typeof AuthResetPasswordTokenRoute
  '/update/$id': typeof AuthUpdateIdRoute
  '/verify-email/$token': typeof AuthVerifyEmailTokenRoute
  '/club/delete/$id': typeof ClubDeleteIdRoute
  '/club/findOne/$id': typeof ClubFindOneIdRoute
  '/club/update/$id': typeof ClubUpdateIdRoute
  '/player/delete/$id': typeof PlayerDeleteIdRoute
  '/player/find/$id': typeof PlayerFindIdRoute
  '/player/update/$id': typeof PlayerUpdateIdRoute
  '/management/clubs': typeof ManagementClubsIndexRoute
  '/management/players': typeof ManagementPlayersIndexRoute
  '/management/users': typeof ManagementUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/findAll': typeof AuthFindAllRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/resend-verification-email': typeof AuthResendVerificationEmailRoute
  '/club/create': typeof ClubCreateRoute
  '/club/findAll': typeof ClubFindAllRoute
  '/player/create': typeof PlayerCreateRoute
  '/player/findAll': typeof PlayerFindAllRoute
  '/myaccount': typeof MyaccountIndexRoute
  '/delete/$id': typeof AuthDeleteIdRoute
  '/register/$token': typeof AuthRegisterTokenRoute
  '/reset-password/$token': typeof AuthResetPasswordTokenRoute
  '/update/$id': typeof AuthUpdateIdRoute
  '/verify-email/$token': typeof AuthVerifyEmailTokenRoute
  '/club/delete/$id': typeof ClubDeleteIdRoute
  '/club/findOne/$id': typeof ClubFindOneIdRoute
  '/club/update/$id': typeof ClubUpdateIdRoute
  '/player/delete/$id': typeof PlayerDeleteIdRoute
  '/player/find/$id': typeof PlayerFindIdRoute
  '/player/update/$id': typeof PlayerUpdateIdRoute
  '/management/clubs': typeof ManagementClubsIndexRoute
  '/management/players': typeof ManagementPlayersIndexRoute
  '/management/users': typeof ManagementUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth/findAll': typeof AuthFindAllRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/resend-verification-email': typeof AuthResendVerificationEmailRoute
  '/club/create': typeof ClubCreateRoute
  '/club/findAll': typeof ClubFindAllRoute
  '/player/create': typeof PlayerCreateRoute
  '/player/findAll': typeof PlayerFindAllRoute
  '/myaccount/': typeof MyaccountIndexRoute
  '/_auth/delete/$id': typeof AuthDeleteIdRoute
  '/_auth/register/$token': typeof AuthRegisterTokenRoute
  '/_auth/reset-password/$token': typeof AuthResetPasswordTokenRoute
  '/_auth/update/$id': typeof AuthUpdateIdRoute
  '/_auth/verify-email/$token': typeof AuthVerifyEmailTokenRoute
  '/club/delete/$id': typeof ClubDeleteIdRoute
  '/club/findOne/$id': typeof ClubFindOneIdRoute
  '/club/update/$id': typeof ClubUpdateIdRoute
  '/player/delete/$id': typeof PlayerDeleteIdRoute
  '/player/find/$id': typeof PlayerFindIdRoute
  '/player/update/$id': typeof PlayerUpdateIdRoute
  '/management/clubs/': typeof ManagementClubsIndexRoute
  '/management/players/': typeof ManagementPlayersIndexRoute
  '/management/users/': typeof ManagementUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/findAll'
    | '/forgot-password'
    | '/login'
    | '/resend-verification-email'
    | '/club/create'
    | '/club/findAll'
    | '/player/create'
    | '/player/findAll'
    | '/myaccount'
    | '/delete/$id'
    | '/register/$token'
    | '/reset-password/$token'
    | '/update/$id'
    | '/verify-email/$token'
    | '/club/delete/$id'
    | '/club/findOne/$id'
    | '/club/update/$id'
    | '/player/delete/$id'
    | '/player/find/$id'
    | '/player/update/$id'
    | '/management/clubs'
    | '/management/players'
    | '/management/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/findAll'
    | '/forgot-password'
    | '/login'
    | '/resend-verification-email'
    | '/club/create'
    | '/club/findAll'
    | '/player/create'
    | '/player/findAll'
    | '/myaccount'
    | '/delete/$id'
    | '/register/$token'
    | '/reset-password/$token'
    | '/update/$id'
    | '/verify-email/$token'
    | '/club/delete/$id'
    | '/club/findOne/$id'
    | '/club/update/$id'
    | '/player/delete/$id'
    | '/player/find/$id'
    | '/player/update/$id'
    | '/management/clubs'
    | '/management/players'
    | '/management/users'
  id:
    | '__root__'
    | '/'
    | '/_auth/findAll'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/resend-verification-email'
    | '/club/create'
    | '/club/findAll'
    | '/player/create'
    | '/player/findAll'
    | '/myaccount/'
    | '/_auth/delete/$id'
    | '/_auth/register/$token'
    | '/_auth/reset-password/$token'
    | '/_auth/update/$id'
    | '/_auth/verify-email/$token'
    | '/club/delete/$id'
    | '/club/findOne/$id'
    | '/club/update/$id'
    | '/player/delete/$id'
    | '/player/find/$id'
    | '/player/update/$id'
    | '/management/clubs/'
    | '/management/players/'
    | '/management/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthFindAllRoute: typeof AuthFindAllRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResendVerificationEmailRoute: typeof AuthResendVerificationEmailRoute
  ClubCreateRoute: typeof ClubCreateRoute
  ClubFindAllRoute: typeof ClubFindAllRoute
  PlayerCreateRoute: typeof PlayerCreateRoute
  PlayerFindAllRoute: typeof PlayerFindAllRoute
  MyaccountIndexRoute: typeof MyaccountIndexRoute
  AuthDeleteIdRoute: typeof AuthDeleteIdRoute
  AuthRegisterTokenRoute: typeof AuthRegisterTokenRoute
  AuthResetPasswordTokenRoute: typeof AuthResetPasswordTokenRoute
  AuthUpdateIdRoute: typeof AuthUpdateIdRoute
  AuthVerifyEmailTokenRoute: typeof AuthVerifyEmailTokenRoute
  ClubDeleteIdRoute: typeof ClubDeleteIdRoute
  ClubFindOneIdRoute: typeof ClubFindOneIdRoute
  ClubUpdateIdRoute: typeof ClubUpdateIdRoute
  PlayerDeleteIdRoute: typeof PlayerDeleteIdRoute
  PlayerFindIdRoute: typeof PlayerFindIdRoute
  PlayerUpdateIdRoute: typeof PlayerUpdateIdRoute
  ManagementClubsIndexRoute: typeof ManagementClubsIndexRoute
  ManagementPlayersIndexRoute: typeof ManagementPlayersIndexRoute
  ManagementUsersIndexRoute: typeof ManagementUsersIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/myaccount/': {
      id: '/myaccount/'
      path: '/myaccount'
      fullPath: '/myaccount'
      preLoaderRoute: typeof MyaccountIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/player/findAll': {
      id: '/player/findAll'
      path: '/player/findAll'
      fullPath: '/player/findAll'
      preLoaderRoute: typeof PlayerFindAllRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/player/create': {
      id: '/player/create'
      path: '/player/create'
      fullPath: '/player/create'
      preLoaderRoute: typeof PlayerCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/club/findAll': {
      id: '/club/findAll'
      path: '/club/findAll'
      fullPath: '/club/findAll'
      preLoaderRoute: typeof ClubFindAllRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/club/create': {
      id: '/club/create'
      path: '/club/create'
      fullPath: '/club/create'
      preLoaderRoute: typeof ClubCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/resend-verification-email': {
      id: '/_auth/resend-verification-email'
      path: '/resend-verification-email'
      fullPath: '/resend-verification-email'
      preLoaderRoute: typeof AuthResendVerificationEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/findAll': {
      id: '/_auth/findAll'
      path: '/findAll'
      fullPath: '/findAll'
      preLoaderRoute: typeof AuthFindAllRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/management/users/': {
      id: '/management/users/'
      path: '/management/users'
      fullPath: '/management/users'
      preLoaderRoute: typeof ManagementUsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/management/players/': {
      id: '/management/players/'
      path: '/management/players'
      fullPath: '/management/players'
      preLoaderRoute: typeof ManagementPlayersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/management/clubs/': {
      id: '/management/clubs/'
      path: '/management/clubs'
      fullPath: '/management/clubs'
      preLoaderRoute: typeof ManagementClubsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/player/update/$id': {
      id: '/player/update/$id'
      path: '/player/update/$id'
      fullPath: '/player/update/$id'
      preLoaderRoute: typeof PlayerUpdateIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/player/find/$id': {
      id: '/player/find/$id'
      path: '/player/find/$id'
      fullPath: '/player/find/$id'
      preLoaderRoute: typeof PlayerFindIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/player/delete/$id': {
      id: '/player/delete/$id'
      path: '/player/delete/$id'
      fullPath: '/player/delete/$id'
      preLoaderRoute: typeof PlayerDeleteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/club/update/$id': {
      id: '/club/update/$id'
      path: '/club/update/$id'
      fullPath: '/club/update/$id'
      preLoaderRoute: typeof ClubUpdateIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/club/findOne/$id': {
      id: '/club/findOne/$id'
      path: '/club/findOne/$id'
      fullPath: '/club/findOne/$id'
      preLoaderRoute: typeof ClubFindOneIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/club/delete/$id': {
      id: '/club/delete/$id'
      path: '/club/delete/$id'
      fullPath: '/club/delete/$id'
      preLoaderRoute: typeof ClubDeleteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/verify-email/$token': {
      id: '/_auth/verify-email/$token'
      path: '/verify-email/$token'
      fullPath: '/verify-email/$token'
      preLoaderRoute: typeof AuthVerifyEmailTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/update/$id': {
      id: '/_auth/update/$id'
      path: '/update/$id'
      fullPath: '/update/$id'
      preLoaderRoute: typeof AuthUpdateIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/reset-password/$token': {
      id: '/_auth/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/reset-password/$token'
      preLoaderRoute: typeof AuthResetPasswordTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register/$token': {
      id: '/_auth/register/$token'
      path: '/register/$token'
      fullPath: '/register/$token'
      preLoaderRoute: typeof AuthRegisterTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/delete/$id': {
      id: '/_auth/delete/$id'
      path: '/delete/$id'
      fullPath: '/delete/$id'
      preLoaderRoute: typeof AuthDeleteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthFindAllRoute: AuthFindAllRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResendVerificationEmailRoute: AuthResendVerificationEmailRoute,
  ClubCreateRoute: ClubCreateRoute,
  ClubFindAllRoute: ClubFindAllRoute,
  PlayerCreateRoute: PlayerCreateRoute,
  PlayerFindAllRoute: PlayerFindAllRoute,
  MyaccountIndexRoute: MyaccountIndexRoute,
  AuthDeleteIdRoute: AuthDeleteIdRoute,
  AuthRegisterTokenRoute: AuthRegisterTokenRoute,
  AuthResetPasswordTokenRoute: AuthResetPasswordTokenRoute,
  AuthUpdateIdRoute: AuthUpdateIdRoute,
  AuthVerifyEmailTokenRoute: AuthVerifyEmailTokenRoute,
  ClubDeleteIdRoute: ClubDeleteIdRoute,
  ClubFindOneIdRoute: ClubFindOneIdRoute,
  ClubUpdateIdRoute: ClubUpdateIdRoute,
  PlayerDeleteIdRoute: PlayerDeleteIdRoute,
  PlayerFindIdRoute: PlayerFindIdRoute,
  PlayerUpdateIdRoute: PlayerUpdateIdRoute,
  ManagementClubsIndexRoute: ManagementClubsIndexRoute,
  ManagementPlayersIndexRoute: ManagementPlayersIndexRoute,
  ManagementUsersIndexRoute: ManagementUsersIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
